<?xml version="1.0"?>
<!DOCTYPE hibernate-mapping PUBLIC
    "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
    "./meta/hibernate-mapping-3.0.dtd">

<hibernate-mapping package="ticketline.db">

	<class name="ticketline.db.Ticketcard" table="ticketcard">
	
	
		<!-- BaseClass -->
		<meta attribute="extra-import">ticketline.db.Entity</meta>
		<meta attribute="extends">Entity</meta>
		<meta attribute="class-description">
			Die Ticketcard ist eine Karte zur Identifikation von
			Stammkunden und Mitarbeitern. Die Daten zur Identifikation
			der Person und eine eindeutige Nummer sind in der Entitaet
			TicketCard gespeichert. Jeder TicketCard ist entweder ein
			Kunde oder ein Mitarbeiter zugeordnet (ausschliessendes
			Oder), der die selbe Nummer zur Identifikation bekommt wie
			die TicketCard. Jeder TicketCard ist als zusaetzliche
			Information der Ausstellungsort zugeordnet.
		</meta>
		
		
		
		<!-- PK, Properties -->
		<id name="kartennr" type="int" column="kartennr">
			<generator class="native" />
		</id>
	
		<property name="typ" type="java.lang.String" not-null="true">
			<meta attribute="field-description">
				Kunde `K', Mitarbeiter `M'
			</meta>
			<column name="typ" length="1"
				check="upper(typ) IN ('K','M')" not-null="true" />
		</property>
		<property name="nname" type="java.lang.String" column="nname"
			length="30">
			<meta attribute="field-description">
				Nachname des Kartenbesitzers
			</meta>
		</property>

		<property name="vname" type="java.lang.String" column="vname"
			length="30">
			<meta attribute="field-description">
				Vorname des Kartenbesitzers
			</meta>
		</property>
		<property name="titel" type="java.lang.String" column="titel"
			length="30">
			<meta attribute="field-description">
				Anrede des Kartenbesitzers
			</meta>
		</property>
		<property name="geschlecht" type="java.lang.String">
			<meta attribute="field-description">
				weiblich (`W'), maennlich (`M') oder juristisch (`J')
			</meta>
			<column name="geschlecht" length="1"
				check="upper(geschlecht) IN ('M','W','J')" />
		</property>
		<property name="geburtsdatum" type="java.sql.Date">
			<meta attribute="field-description">
				Heute - 120 Jahre &lt; Geburtsdatum &lt; Heute - 3 Jahre
			</meta>
			<column name="geburtsdatum"
				check="geburtsdatum BETWEEN (now() - '120 years'::interval) AND (now() - '3 years'::interval)" />
		</property>
		<property name="strasse" type="java.lang.String"
			column="strasse" length="30">
			<meta attribute="field-description">
				z.B.: Hauptstrasse 11
			</meta>
		</property>
		<property name="plz" type="java.lang.String">
			<meta attribute="field-description">
				z.B.: 1100; 0000 &lt;= Postleitzahl &lt;= 9999
			</meta>
			<column name="plz" length="4" check="plz ~ '^[0-9]{4}$'" />
		</property>
		<property name="ort" type="java.lang.String" column="ort"
			length="30">
			<meta attribute="field-description">z.B.: Wien</meta>
		</property>
		<property name="telnr" type="java.lang.String" column="telnr"
			length="20">
			<meta attribute="field-description">
				Telefonnummer des Kartenbesitzers
			</meta>
		</property>
		<property name="email" type="java.lang.String" column="email"
			length="50">
			<meta attribute="field-description">
				Email-Adresse des Karteninhabers
			</meta>
		</property>

		<!-- Associations -->
		<!-- bi-directional many-to-one association to Ort -->
		<many-to-one name="ortverk" class="ticketline.db.Ort"
			not-null="true" cascade="save-update">
			<column name="verkaufsstelle" />
			<column name="verkaufsort" />
		</many-to-one>


		<joined-subclass name="Mitarbeiter" table="mitarbeiter"
			dynamic-update="false" dynamic-insert="false">
			<key column="kartennr" />
			<property name="blz" type="java.lang.String"
				not-null="true">
				<column name="blz" length="5"
					check="blz ~ '^[0-9]{1,5}$'" not-null="true" />
			</property>
			<property name="kontonr" type="java.lang.String"
				not-null="true">
				<column name="kontonr" length="16"
					check="kontonr ~ '^[0-9]{1,16}$'" not-null="true" />
			</property>
			<property name="pin" type="java.lang.String"
				not-null="true">
				<column name="pin" length="4" check="pin ~ '^[0-9]{4}$'"
					not-null="true" />
			</property>
			<property name="berechtigung" type="java.lang.String"
				not-null="true">
				<column name="berechtigung" length="30"
					check="upper(berechtigung) IN ('VK','MK','VADM','SYS')"
					not-null="true" />
			</property>
			<property name="passwort" type="java.lang.String"
				column="passwort" not-null="true" length="8" />
			<property name="username" type="java.lang.String"
				not-null="true" length="30">
				<column name="username" check="not username=''"
					unique="true" />
			</property>


			<!-- Associations -->

			<!-- bi-directional one-to-many association to Transaktion -->
			<set name="transaktionen" lazy="false" inverse="true"
				cascade="none">
				<key>
					<column name="mitarbeiternr" />
				</key>
				<one-to-many class="ticketline.db.Transaktion" />
			</set>

		</joined-subclass>

		<joined-subclass name="Kunde" table="kunde"
			dynamic-update="false" dynamic-insert="false">
			<key column="kartennr" />
			<property name="blz" type="java.lang.String">
				<column name="blz" length="5"
					check="blz ~ '^[0-9]{1,5}$'" />
			</property>
			<property name="kontonr" type="java.lang.String">
				<column name="kontonr" length="16"
					check="kontonr ~ '^[0-9]{1,16}$'" />
			</property>
			<property name="ermaechtigung" type="boolean"
				column="ermaechtigung" not-null="true" />
			<property name="kreditkartennr" type="java.lang.String">
				<column name="kreditkartennr" length="16"
					check="kreditkartennr ~ '^[0-9]{1,16}$'" />
			</property>
			<property name="kkgueltigbis" type="java.sql.Date"
				column="kkgueltigbis" length="4" />
			<property name="kontostand" type="java.math.BigDecimal"
				column="kontostand" length="10" />
			<property name="kontolimit" type="java.math.BigDecimal"
				column="kontolimit" length="10" />
			<property name="ermaessigung" type="java.math.BigDecimal"
				not-null="true">
				<column name="ermaessigung" length="2"
					check="ermaessigung BETWEEN 0 AND 1" not-null="true" />
			</property>
			<property name="tkgueltigbis" type="java.sql.Date"
				not-null="true">
				<column name="tkgueltigbis" length="4"
					check="tkgueltigbis > now()" not-null="true" />
			</property>
			<property name="gesperrt" type="boolean" column="gesperrt"
				not-null="true" length="1" />
			<property name="onlinepwd" type="java.lang.String"
				column="onlinepwd" length="8" />
			<property name="gruppe" type="java.lang.String"
				not-null="true">
				<column name="gruppe" length="20"
					check="upper(gruppe) IN ('STANDARD','VIP','GOLD','PREMIUM')"
					not-null="true" />
			</property>
			<property name="vorlieben" type="java.lang.String"
				column="vorlieben" length="200" />
			<!-- Associations -->

			<!-- bi-directional one-to-many association to Bestellung -->
			<set name="bestellungen" lazy="false" inverse="true"
				cascade="none">
				<key>
					<column name="kartennr" />
				</key>
				<one-to-many class="ticketline.db.Bestellung" />
			</set>
			<!-- bi-directional one-to-many association to Transaktion -->
			<set name="transaktionen" lazy="false" inverse="true"
				cascade="none">
				<key>
					<column name="kartennr" />
				</key>
				<one-to-many class="ticketline.db.Transaktion" />
			</set>
		</joined-subclass>

	</class>

</hibernate-mapping>